pipeline{

       agent any
        tools {
     jdk 'JAVA_HOME'
     maven 'M2_HOME'
  }
      environment {
         registry = "yacinef/springprojet" 
         DOCKERHUB_CREDENTIALS = credentials('dockerid')
	 }
      
     
     
        stages{
   stage ('GIT CHECK-OUT') {
            steps {
                
                git branch: 'yacine', 
                url: 'https://github.com/Mohaameed1/Achat.git'   
            }  
        }
            stage('Cleaning the project') {
                 steps{
                    sh 'mvn -B -DskipTests clean  '
                    }
                }


	        stage('Build') {
      		    steps {
        		sh 'mvn -B -DskipTests clean package'
      		          }
            	}
            stage('JUnit/Mockito'){
                steps {
                sh '''mvn -version
                mvn -B -DskipTests clean package'''
                sh 'mvn test'
                echo """Bravo! tous les tests sont pris en charge"""
                }
            }
	    
	   

   
           
            
             

              


        stage('Build docker image'){
            steps{
                script{
                    sh 'docker build -t yacinef/springprojet:latest .'
                }
            }
        }
	 stage("DockerLogin") {
                steps {
                sh 'docker login -u yacinef -p @yacine123 '
                }
                }
		
		
        stage("DockerPush") {
                 steps {
                 sh 'docker push yacinef/springprojet:latest'
                }
                }
		
		
		
	       stage ('Maven Test Sonar') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=@yacine123'
            }
          }
	  
	  stage('MVN NEXUS ') {
            steps {
               sh "mvn -Dmaven.test.skip=true -Dmaven.test.failure.ignore=true deploy:deploy-file -DgroupId=tn.esprit.rh -DartifactId=achat -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://192.168.56.3:8081//repository/maven-releases/ -Dfile=target/springprojet.jar"
              
            }
           }
			
		/*
	stage("DockerCompose") {
                 steps {
                 sh "docker compose -f docker-compose.yml up -d "
                }
                }	
*/
        stage("Send Email"){
           steps{
          	 emailext attachLog: true, body: "${env.BUILD_URL} has result ${currentBuild.result}", compressLog: true, subject: "Status of pipeline: ${currentBuild.fullDisplayName}", to: 'yacine.feki@esprit.tn'
               emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
           }
       }
        
	}
	post {
      	always {
      		sh 'docker logout'
      		emailext attachLog: true, body: "${env.BUILD_URL} has result ${currentBuild.result}", compressLog: true, subject: "Status of pipeline: ${currentBuild.fullDisplayName}", to: 'yacine.feki@esprit.tn'
          	emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
  		
      	}
      }
	  
}
